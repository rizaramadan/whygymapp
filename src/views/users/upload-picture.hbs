<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Profile Picture - WhyGym</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
</head>
<body class="bg-gray-50 min-h-screen" x-data="uploadForm()">
    <div class="max-w-lg mx-auto p-6">
        <div class="bg-white rounded-xl shadow-sm overflow-hidden p-6 space-y-4">
            <h1 class="text-2xl font-semibold text-gray-900">Upload Profile Picture</h1>
            
            <!-- Upload Form -->
            <form @submit.prevent="handleSubmit" class="space-y-4">
                <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-700">
                        Select Image
                    </label>
                    <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md"
                         :class="{'border-green-500 bg-green-50': isDragging}"
                         @dragover.prevent="isDragging = true"
                         @dragleave.prevent="isDragging = false"
                         @drop.prevent="handleDrop($event)">
                        <div class="space-y-1 text-center">
                            <template x-if="!preview">
                                <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                            </template>
                            <template x-if="preview">
                                <img :src="preview" class="mx-auto h-32 w-32 object-cover rounded-lg" />
                            </template>
                            <div class="flex flex-col items-center text-sm text-gray-600">
                                <label class="relative cursor-pointer bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg shadow-sm transition-colors duration-150 mb-2 flex items-center">
                                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                    </svg>
                                    <span>Choose a Photo</span>
                                    <input type="file" 
                                           accept="image/*" 
                                           class="sr-only" 
                                           @change="handleFileSelect($event)">
                                </label>
                                <p>or drag and drop your image here</p>
                            </div>
                            <p class="text-xs text-gray-500">
                                PNG, JPG, GIF up to 10MB
                            </p>
                        </div>
                    </div>
                </div>

                <!-- Error Message -->
                <div x-show="error" class="text-red-600 text-sm" x-text="error"></div>

                <!-- Upload Progress -->
                <div x-show="isUploading" class="relative pt-1">
                    <div class="flex mb-2 items-center justify-between">
                        <div>
                            <span class="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-green-600 bg-green-200">
                                Uploading
                            </span>
                        </div>
                    </div>
                    <div class="overflow-hidden h-2 mb-4 text-xs flex rounded bg-green-200">
                        <div class="w-full bg-green-500 transition-all duration-300 ease-out"></div>
                    </div>
                </div>

                <!-- Submit Button -->
                <div class="flex justify-end">
                    <button type="submit"
                            :disabled="!selectedFile || isUploading"
                            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed">
                        Upload Picture
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        function uploadForm() {
            return {
                selectedFile: null,
                preview: null,
                error: null,
                isUploading: false,
                isDragging: false,

                handleFileSelect(event) {
                    const file = event.target.files[0];
                    this.processFile(file);
                },

                handleDrop(event) {
                    this.isDragging = false;
                    const file = event.dataTransfer.files[0];
                    this.processFile(file);
                },

                processFile(file) {
                    if (!file) return;
                    
                    // Validate file type
                    if (!file.type.startsWith('image/')) {
                        this.error = 'Please select an image file';
                        return;
                    }

                    // Validate file size (10MB)
                    if (file.size > 10 * 1024 * 1024) {
                        this.error = 'File size must be less than 10MB';
                        return;
                    }

                    this.selectedFile = file;
                    this.error = null;

                    // Create preview
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        this.preview = e.target.result;
                    };
                    reader.readAsDataURL(file);
                },

                async handleSubmit() {
                    if (!this.selectedFile) return;

                    this.isUploading = true;
                    this.error = null;

                    const formData = new FormData();
                    formData.append('file', this.selectedFile);

                    try {
                        const response = await fetch('/users/save-picture', {
                            method: 'POST',
                            body: formData
                        });

                        if (!response.ok) {
                            throw new Error('Upload failed');
                        }                        

                        // Redirect back to the previous page or dashboard
                        window.location.href = '/user-dashboard';
                    } catch (err) {
                        this.error = err.message;
                        this.isUploading = false;
                    }
                }
            }
        }
    </script>
</body>
</html> 