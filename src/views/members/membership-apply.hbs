<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Membership Application - WhyGym</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        .step-indicator {
            display: flex;
            justify-content: space-between;
            margin-bottom: 2rem;
            position: relative;
        }
        
        .step {
            width: 2rem;
            height: 2rem;
            border-radius: 50%;
            background: white;
            border: 2px solid #e5e7eb;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            position: relative;
            z-index: 1;
        }
        
        .step.active {
            border-color: #16a34a;
            color: #16a34a;
        }
        
        .step.completed {
            background-color: #16a34a;
            border-color: #16a34a;
            color: white;
        }
        
        .step-connector {
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 2px;
            background: #e5e7eb;
            transform: translateY(-50%);
            z-index: 0;
        }
        
        .form-section {
            display: none;
        }
        
        .form-section.active {
            display: block;
        }
        
        .error-message {
            color: #dc2626;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: none;
        }
    </style>
</head>
<body class="bg-gray-50">
    <div class="max-w-4xl mx-auto p-4">
        <!-- Header -->
        <div class="flex justify-between items-center p-4 bg-white rounded-xl shadow-sm mb-6">
            <h1 class="text-xl font-bold text-green-800">WhyGym</h1>
            <a href="/user-dashboard" class="text-green-600 hover:text-green-700 text-sm font-medium">Back to Dashboard</a>
        </div>

        <!-- Application Form -->
        <div class="bg-white rounded-xl shadow-sm overflow-hidden">
            <div class="p-6 border-b border-gray-100">
                <h2 class="text-2xl font-semibold text-gray-900">Membership Application</h2>
                <p class="mt-2 text-gray-600">Please fill out all required information below.</p>
            </div>

            <!-- Step Indicator -->
            <div class="p-6 border-b border-gray-100">
                <div class="step-indicator">
                    <div class="step-connector"></div>
                    <div class="step active" data-step="1">1</div>
                    <div class="step" data-step="2">2</div>
                    <div class="step" data-step="3">3</div>
                </div>
            </div>

            <form id="membershipForm" action="/api/membership/apply" method="POST" class="p-6">
                <!-- Section 1: Personal Information -->
                <div class="form-section active space-y-6" data-section="1">
                    <h3 class="text-xl font-semibold mb-6">Personal Information</h3>
                    
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Email yang membayar uang muka
                                <span class="text-red-500">*</span>
                            </label>
                            <input type="email" name="emailPic" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" required>
                            <div class="error-message"></div>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Durasi membership
                                <span class="text-red-500">*</span>
                            </label>
                            <select name="duration" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" required>
                                <option value="">Pilih durasi</option>
                                <option value="1">90 hari (3 bulan)</option>
                                <option value="2">180 hari (6 bulan)</option>
                                <option value="3">360 hari (12 bulan)</option>
                            </select>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Nama Lengkap
                                <span class="text-red-500">*</span>
                            </label>
                            <input type="text" name="fullName" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" required>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Nickname
                                <span class="text-red-500">*</span>
                            </label>
                            <input type="text" name="nickname" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" required>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Jenis Kelamin
                                <span class="text-red-500">*</span>
                            </label>
                            <select name="gender" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" required>
                                <option value="">Pilih jenis kelamin</option>
                                <option value="male">Pria</option>
                                <option value="female">Wanita</option>
                            </select>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Tanggal Lahir
                                <span class="text-red-500">*</span>
                            </label>
                            <input type="date" 
                                   name="dateOfBirth" 
                                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" 
                                   required
                                   max="{{ getCurrentDate }}"
                                   data-min-age="7">
                            <div class="error-message"></div>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Alamat lengkap
                                <span class="text-red-500">*</span>
                            </label>
                            <textarea name="address" rows="3" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" required></textarea>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Nomor Whatsapp
                                <span class="text-red-500">*</span>
                            </label>
                            <input type="tel" name="wa" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" required>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Nomor Identitas (KTP/SIM/Kartu Pelajar)
                                <span class="text-red-500">*</span>
                            </label>
                            <input type="text" name="identityNumber" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" required>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Kondisi Kesehatanmu (tuliskan jika ada kondisi kesehatan khusus yang berpengaruh pada aktivitas olahraga)
                                <span class="text-red-500">*</span>
                            </label>
                            <select name="healthConditionPreset" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" onchange="handleHealthConditionChange(this)">
                                <option value="none">Saya dalam kondisi sehat untuk melakukan aktivitas fisik</option>
                                <option value="other">Lainnya (tuliskan)</option>
                            </select>
                            <input type="text" 
                                   name="healthCondition" 
                                   id="customHealthCondition" 
                                   class="mt-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" 
                                   placeholder="Tuliskan kondisi kesehatan Anda"
                                   style="display: none;">
                            <div class="error-message"></div>
                        </div>
                    </div>
                </div>

                <!-- Section 2: Under 18 Information -->
                <div class="form-section space-y-6" data-section="2">
                    <h3 class="text-xl font-semibold mb-6">Informasi Wali (Untuk Member Dibawah 18 Tahun)</h3>
                    
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Nama Orang Tua/Wali
                                <span class="text-red-500">*</span>
                            </label>
                            <input type="text" name="parentName" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500">
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Nomor Identitas Orang Tua/Wali
                                <span class="text-red-500">*</span>
                            </label>
                            <input type="text" name="parentIdentityNumber" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500">
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Nomor Telepon Orang Tua/Wali
                                <span class="text-red-500">*</span>
                            </label>
                            <input type="tel" name="parentContact" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500">
                        </div>

                        <div>
                            <label class="flex items-center">
                                <input type="checkbox" name="underageConsent" class="rounded border-gray-300 text-green-600 shadow-sm focus:border-green-500 focus:ring-green-500">
                                <span class="ml-2 text-sm text-gray-700">
                                    Saya, selaku orang tua/wali, memberikan izin kepada anak saya
                                    <span class="text-red-500">*</span>
                                </span>
                            </label>
                        </div>
                    </div>
                </div>

                <!-- Section 3: Terms and Conditions -->
                <div class="form-section space-y-6" data-section="3">
                    <h3 class="text-xl font-semibold mb-6">Persetujuan dan Syarat Ketentuan</h3>
                    
                    <div class="space-y-4">
                        <div>
                            <label class="flex items-center">
                                <input type="checkbox" name="termsAgree" class="rounded border-gray-300 text-green-600 shadow-sm focus:border-green-500 focus:ring-green-500" required>
                                <span class="ml-2 text-sm text-gray-700">
                                    Saya telah membaca dan menyetujui seluruh poin dan pasal ketentuan
                                    <span class="text-red-500">*</span>
                                </span>
                            </label>
                        </div>

                        <div>
                            <label class="flex items-center">
                                <input type="checkbox" name="riskAgree" class="rounded border-gray-300 text-green-600 shadow-sm focus:border-green-500 focus:ring-green-500" required>
                                <span class="ml-2 text-sm text-gray-700">
                                    Saya menyadari dan menerima segala risiko yang mungkin terjadi saat menggunakan fasilitas WhyGym
                                    <span class="text-red-500">*</span>
                                </span>
                            </label>
                        </div>

                        <div>
                            <label class="flex items-center">
                                <input type="checkbox" name="dataAgree" class="rounded border-gray-300 text-green-600 shadow-sm focus:border-green-500 focus:ring-green-500" required>
                                <span class="ml-2 text-sm text-gray-700">
                                    Saya menyetujui pemrosesan data pribadi saya oleh WhyGym sesuai klausul yang berlaku
                                    <span class="text-red-500">*</span>
                                </span>
                            </label>
                        </div>

                        <div>
                            <label class="flex items-center">
                                <input type="checkbox" name="rulesAgree" class="rounded border-gray-300 text-green-600 shadow-sm focus:border-green-500 focus:ring-green-500" required>
                                <span class="ml-2 text-sm text-gray-700">
                                    Saya bersedia mematuhi semua aturan, sanksi, dan segala kebijakan lainnya yang ditetapkan WhyGym
                                    <span class="text-red-500">*</span>
                                </span>
                            </label>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700">
                                Front Officer
                                <span class="text-red-500">*</span>
                            </label>
                            <select name="frontOfficer" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" required>
                                <option value="">Pilih front officer</option>
                                <option value="Heru">Heru</option>
                                <option value="Maya">Maya</option>
                                <option value="Miftah">Miftah</option>
                                <option value="Rani">Rani</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Navigation Buttons -->
                <div class="flex justify-between mt-8">
                    <button type="button" id="prevBtn" class="px-4 py-2 bg-white border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500" style="display: none;">
                        Previous
                    </button>
                    <button type="button" id="nextBtn" class="px-4 py-2 bg-green-600 border border-transparent rounded-md shadow-sm text-sm font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                        Next
                    </button>
                    <button type="submit" id="submitBtn" class="px-4 py-2 bg-green-600 border border-transparent rounded-md shadow-sm text-sm font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500" style="display: none;">
                        Submit Application
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('membershipForm');
            const sections = document.querySelectorAll('.form-section');
            const steps = document.querySelectorAll('.step');
            const nextBtn = document.getElementById('nextBtn');
            const prevBtn = document.getElementById('prevBtn');
            const submitBtn = document.getElementById('submitBtn');
            let currentSection = 0;

            // Function to show/hide sections
            function showSection(index) {
                sections.forEach((section, i) => {
                    section.classList.toggle('active', i === index);
                });

                steps.forEach((step, i) => {
                    step.classList.toggle('active', i === index);
                    step.classList.toggle('completed', i < index);
                });

                // Update buttons
                prevBtn.style.display = index === 0 ? 'none' : 'block';
                nextBtn.style.display = index === sections.length - 1 ? 'none' : 'block';
                submitBtn.style.display = index === sections.length - 1 ? 'block' : 'none';

                // Save current section to localStorage
                localStorage.setItem('currentSection', index);
            }

            // Handle next button click
            nextBtn.addEventListener('click', function() {
                if (validateSection(currentSection)) {
                    currentSection++;
                    showSection(currentSection);
                    saveFormData();
                }
            });

            // Handle previous button click
            prevBtn.addEventListener('click', function() {
                currentSection--;
                showSection(currentSection);
            });

            // Form validation
            function validateSection(sectionIndex) {
                const currentSectionEl = sections[sectionIndex];
                const inputs = currentSectionEl.querySelectorAll('input[required], select[required], textarea[required]');
                let isValid = true;

                inputs.forEach(input => {
                    if (!input.value) {
                        isValid = false;
                        showError(input);
                    } else {
                        clearError(input);
                    }
                });

                return isValid;
            }

            // Show error message
            function showError(input) {
                input.classList.add('border-red-500');
                const errorDiv = input.nextElementSibling;
                if (errorDiv && errorDiv.classList.contains('error-message')) {
                    errorDiv.textContent = 'This field is required';
                    errorDiv.style.display = 'block';
                }
            }

            // Clear error message
            function clearError(input) {
                input.classList.remove('border-red-500');
                const errorDiv = input.nextElementSibling;
                if (errorDiv && errorDiv.classList.contains('error-message')) {
                    errorDiv.style.display = 'none';
                }
            }

            // Save form data to localStorage
            function saveFormData() {
                const formData = new FormData(form);
                const data = {};
                // Special handling for checkboxes to ensure unchecked state is saved
                form.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                    data[checkbox.name] = checkbox.checked;
                });
                // Handle all other form fields
                for (let [key, value] of formData.entries()) {
                    if (!data.hasOwnProperty(key)) { // Don't override checkbox values
                        data[key] = value;
                    }
                }
                localStorage.setItem('formData', JSON.stringify(data));
            }

            // Load saved form data
            function loadFormData() {
                const savedData = localStorage.getItem('formData');
                if (savedData) {
                    const data = JSON.parse(savedData);
                    for (let key in data) {
                        const input = form.elements[key];
                        if (input) {
                            if (input.type === 'checkbox') {
                                input.checked = data[key] === true; // Use strict boolean comparison
                            } else {
                                input.value = data[key];
                            }
                        }
                    }
                }

                // Restore current section
                const savedSection = localStorage.getItem('currentSection');
                if (savedSection !== null) {
                    currentSection = parseInt(savedSection);
                    showSection(currentSection);
                }
            }

            // Handle form submission
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                if (validateSection(currentSection)) {
                    // Clear saved data
                    localStorage.removeItem('formData');
                    localStorage.removeItem('currentSection');
                    
                    // Submit the form
                    this.submit();
                }
            });

            // Load saved data when page loads
            loadFormData();

            // Add change event listeners to all inputs for auto-save
            form.querySelectorAll('input, select, textarea').forEach(input => {
                if (input.type === 'checkbox') {
                    // Special handling for checkboxes
                    input.addEventListener('change', function() {
                        saveFormData();
                        // Ensure the checkbox state is immediately saved
                        const data = JSON.parse(localStorage.getItem('formData') || '{}');
                        data[this.name] = this.checked;
                        localStorage.setItem('formData', JSON.stringify(data));
                    });
                } else {
                    input.addEventListener('change', saveFormData);
                }
            });

            // Handle date of birth changes
            const dobInput = form.querySelector('input[name="dateOfBirth"]');
            
            // Set max date to today
            const today = new Date();
            const maxDate = today.toISOString().split('T')[0];
            dobInput.setAttribute('max', maxDate);

            function validateAge(birthDate) {
                const today = new Date();
                const birth = new Date(birthDate);
                const minAge = parseInt(dobInput.dataset.minAge) || 7;
                
                let age = today.getFullYear() - birth.getFullYear();
                const monthDiff = today.getMonth() - birth.getMonth();
                
                // Adjust age if birthday hasn't occurred this year
                if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {
                    age--;
                }
                
                return age >= minAge;
            }

            dobInput.addEventListener('change', function() {
                const dob = new Date(this.value);
                const isValidAge = validateAge(dob);
                
                if (!isValidAge) {
                    showError(this);
                    this.value = ''; // Clear invalid date
                    const errorDiv = this.nextElementSibling;
                    if (errorDiv && errorDiv.classList.contains('error-message')) {
                        errorDiv.textContent = 'Member must be at least 7 years old';
                        errorDiv.style.display = 'block';
                    }
                    return;
                }
                
                clearError(this);
                const age = today.getFullYear() - dob.getFullYear();
                
                // Show/hide under 18 section based on age
                if (age < 18) {
                    const parentFields = document.querySelectorAll('[name^="parent"]');
                    parentFields.forEach(field => field.required = true);
                } else {
                    const parentFields = document.querySelectorAll('[name^="parent"]');
                    parentFields.forEach(field => {
                        field.required = false;
                        field.value = '';
                    });
                }
                
                saveFormData();
            });

            // Modify the loadFormData function to handle health condition
            const originalLoadFormData = loadFormData;
            loadFormData = function() {
                originalLoadFormData();
                const savedData = localStorage.getItem('formData');
                if (savedData) {
                    const data = JSON.parse(savedData);
                    const healthSelect = form.elements['healthConditionPreset'];
                    const customInput = document.getElementById('customHealthCondition');
                    
                    // If we have saved health condition data
                    if (data.healthCondition) {
                        // If the saved value matches the default option
                        if (data.healthCondition === 'Saya dalam kondisi sehat untuk melakukan aktivitas fisik') {
                            healthSelect.value = 'none';
                            customInput.style.display = 'none';
                        } else {
                            // For any other value, show the custom input
                            healthSelect.value = 'other';
                            customInput.value = data.healthCondition;
                            customInput.style.display = 'block';
                        }
                    }
                }
            };

            // Also modify handleHealthConditionChange to ensure proper value setting
            function handleHealthConditionChange(select) {
                const customInput = document.getElementById('customHealthCondition');
                if (select.value === 'other') {
                    customInput.style.display = 'block';
                    customInput.required = true;
                    if (!customInput.value) {
                        customInput.focus(); // Focus the input when shown
                    }
                } else {
                    customInput.style.display = 'none';
                    customInput.required = false;
                    customInput.value = select.options[select.selectedIndex].text;
                }
                saveFormData();
            }

            // Add the function to the window object to make it accessible from HTML
            window.handleHealthConditionChange = handleHealthConditionChange;

            // Initial trigger of health condition handling on page load
            const healthSelect = form.elements['healthConditionPreset'];
            if (healthSelect) {
                handleHealthConditionChange(healthSelect);
            }
        });
    </script>
</body>
</html> 